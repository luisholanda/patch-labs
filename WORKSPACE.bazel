workspace(name = "patch-labs")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

# Configure Rust support
http_archive(
    name = "rules_rust",
    sha256 = "0cc7e6b39e492710b819e00d48f2210ae626b717a3ab96e048c43ab57e61d204",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_rust/releases/download/0.10.0/rules_rust-v0.10.0.tar.gz",
        "https://github.com/bazelbuild/rules_rust/releases/download/0.10.0/rules_rust-v0.10.0.tar.gz",
    ],
)

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")

rules_rust_dependencies()

rust_register_toolchains(
    edition = "2021",
    include_rustc_srcs = True,
    version = "1.64.0",
)

load("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_dependencies")

rust_analyzer_dependencies()

load("@rules_rust//crate_universe:repositories.bzl", "crate_universe_dependencies")

crate_universe_dependencies()

new_local_repository(
    name = "crates",
    build_file = "//third-party/crates:BUILD.bazel",
    path = "./third-party/crates",
)

load("@crates//:crates.bzl", "crate_repositories")

crate_repositories()

# Add hermetic C/C++ toolchain
git_repository(
    name = "bazel-zig-cc",
    commit = "5240246cab83d23c7a6a7f6b6b95941124d4add1",
    remote = "https://git.sr.ht/~motiejus/bazel-zig-cc",
    shallow_since = "1659042833 -0700",
)

load("@bazel-zig-cc//toolchain:defs.bzl", zig_toolchains = "toolchains")

zig_toolchains()

register_toolchains(
    "@zig_sdk//toolchain:linux_amd64_gnu.2.34",
    "@zig_sdk//toolchain:linux_arm64_gnu.2.34",
    "@zig_sdk//toolchain:darwin_amd64",
    "@zig_sdk//toolchain:darwin_arm64",
    "@zig_sdk//toolchain:windows_amd64",
)

# Protobuf support

http_archive(
    name = "rules_proto",
    sha256 = "e017528fd1c91c5a33f15493e3a398181a9e821a804eb7ff5acdd1d2d6c2b18d",
    strip_prefix = "rules_proto-4.0.0-3.20.0",
    urls = [
        "https://github.com/bazelbuild/rules_proto/archive/refs/tags/4.0.0-3.20.0.tar.gz",
    ],
)

http_archive(
    name = "rules_buf",
    sha256 = "523a4e06f0746661e092d083757263a249fedca535bd6dd819a8c50de074731a",
    strip_prefix = "rules_buf-0.1.1",
    urls = [
        "https://github.com/bufbuild/rules_buf/archive/refs/tags/v0.1.1.zip",
    ],
)

load("@rules_buf//buf:repositories.bzl", "rules_buf_dependencies", "rules_buf_toolchains")

rules_buf_dependencies()

rules_buf_toolchains(version = "v1.8.0")

load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")

rules_proto_dependencies()

rules_proto_toolchains()

# FoundationDB files

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_file")

FDB_VERSION = "7.1.23"

FDB_DOWNLOAD_URL = "https://github.com/apple/foundationdb/releases/download"

http_file(
    name = "fdbcli",
    downloaded_file_path = "fdbcli",
    executable = True,
    sha256 = "af20f0b8219ec284ecd9fabc74826b404afd5581bf87dde2b048d5fded32cfdd",
    urls = ["{}/{}/fdbcli.x86_64".format(FDB_DOWNLOAD_URL, FDB_VERSION)],
)

http_file(
    name = "libfdb",
    downloaded_file_path = "libfdb_c.so",
    executable = True,
    sha256 = "2af4d714c1e84879393ef4a73c8d1522041af183b97af901e9fd98a17ba583eb",
    urls = ["{}/{}/libfdb_c.x86_64.so".format(FDB_DOWNLOAD_URL, FDB_VERSION)],
)

http_file(
    name = "fdbserver",
    downloaded_file_path = "fdbserver",
    executable = True,
    sha256 = "91b40e5351f1bb0562dad6b9b659b9cb5f25f64a2b0bd8ffd5997e36617ac6d6",
    urls = ["{}/{}/fdbserver.x86_64".format(FDB_DOWNLOAD_URL, FDB_VERSION)],
)
