load("@rules_rust//crate_universe:defs.bzl", "crate", "crates_vendor")

crates_vendor(
    name = "crates_vendor",
    annotations = {
        "uuid": [crate.annotation(
            rustc_flags = [
                "--cfg",
                "uuid_unstable",
            ],
        )],
        "foundationdb": [crate.annotation(
            deps = [
                "@patch-labs//third-party/foundationdb:libfdb",
            ],
        )],
        "foundationdb-sys": [crate.annotation(
            build_script_data = [
                "@libclang//:libclang.so",
                "@glibc//:headers",
            ],
            build_script_env = {
                "LIBCLANG_PATH": "$(execpath @libclang//:libclang.so)",
                # Yes, this is a stupid hack to get bindgen's clang to find
                # system headers.
                "BINDGEN_EXTRA_CLANG_ARGS": "-I$${pwd}/external/glibc/include",
            },
        )],
    },
    cargo_lockfile = "//third-party:Cargo.lock",
    manifests = ["//third-party:Cargo.toml"],
    mode = "remote",
    supported_platform_triples = [
        "aarch64-unknown-linux-gnu",
        "i686-unknown-linux-gnu",
        "x86_64-unknown-linux-gnu",
        "arm-unknown-linux-gnueabi",
        "armv7-unknown-linux-gnueabi",
        "powerpc-unknown-linux-gnu",
    ],
    tags = ["manual"],
    vendor_path = "crates",
)
