###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run @//third-party:crates_vendor
###############################################################################

load("@rules_rust//cargo:defs.bzl", "cargo_build_script")
load("@rules_rust//rust:defs.bzl", "rust_library")

package(default_visibility = ["//visibility:public"])

rust_library(
    name = "ring",
    srcs = glob(["**/*.rs"]),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    crate_features = [
        "alloc",
        "default",
        "dev_urandom_fallback",
        "once_cell",
    ],
    crate_root = "src/lib.rs",
    edition = "2018",
    rustc_flags = ["--cap-lints=allow"],
    tags = [
        "cargo-bazel",
        "crate-name=ring",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.16.20",
    deps = [
        "@crates_vendor__ring-0.16.20//:build_script_build",
        "@crates_vendor__untrusted-0.7.1//:untrusted",
    ] + select({
        "@rules_rust//rust/platform:aarch64-unknown-linux-gnu": [
            "@crates_vendor__libc-0.2.144//:libc",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__once_cell-1.17.1//:once_cell",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__spin-0.5.2//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux"))))
        ],
        "@rules_rust//rust/platform:arm-unknown-linux-gnueabi": [
            "@crates_vendor__libc-0.2.144//:libc",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__once_cell-1.17.1//:once_cell",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__spin-0.5.2//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux"))))
        ],
        "@rules_rust//rust/platform:armv7-unknown-linux-gnueabi": [
            "@crates_vendor__libc-0.2.144//:libc",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__once_cell-1.17.1//:once_cell",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__spin-0.5.2//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux"))))
        ],
        "@rules_rust//rust/platform:i686-unknown-linux-gnu": [
            "@crates_vendor__libc-0.2.144//:libc",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__once_cell-1.17.1//:once_cell",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__spin-0.5.2//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux"))))
        ],
        "@rules_rust//rust/platform:powerpc-unknown-linux-gnu": [
            "@crates_vendor__libc-0.2.144//:libc",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__once_cell-1.17.1//:once_cell",  # cfg(any(target_os = "android", target_os = "linux"))
        ],
        "@rules_rust//rust/platform:x86_64-unknown-linux-gnu": [
            "@crates_vendor__libc-0.2.144//:libc",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__once_cell-1.17.1//:once_cell",  # cfg(any(target_os = "android", target_os = "linux"))
            "@crates_vendor__spin-0.5.2//:spin",  # cfg(any(target_arch = "x86", target_arch = "x86_64", all(any(target_arch = "aarch64", target_arch = "arm"), any(target_os = "android", target_os = "fuchsia", target_os = "linux"))))
        ],
        "//conditions:default": [],
    }),
)

cargo_build_script(
    name = "ring_build_script",
    srcs = glob(["**/*.rs"]),
    crate_features = [
        "alloc",
        "default",
        "dev_urandom_fallback",
        "once_cell",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(
        include = ["**"],
        exclude = [
            "**/* *",
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ),
    edition = "2018",
    links = "ring-asm",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "crate-name=ring",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.16.20",
    visibility = ["//visibility:private"],
    deps = [
        "@crates_vendor__cc-1.0.79//:cc",
    ],
)

alias(
    name = "build_script_build",
    actual = "ring_build_script",
    tags = ["manual"],
)
