###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run //third-party:crates_vendor
###############################################################################

load(
    "@bazel_skylib//lib:selects.bzl",
    "selects",
)
load(
    "@rules_rust//cargo:defs.bzl",
    "cargo_build_script",
)

# buildifier: disable=bzl-visibility
load("@rules_rust//crate_universe/private:selects.bzl", "select_with_or")
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
)

package(default_visibility = ["//visibility:public"])

# licenses([
#     "TODO",  # BSD-3-Clause
# ])

rust_library(
    name = "bindgen",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = selects.with_or({
        "//conditions:default": {
        },
    }),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ) + select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "clap",
        "default",
        "env_logger",
        "log",
        "logging",
        "runtime",
        "which",
        "which-rustfmt",
    ],
    crate_root = "src/lib.rs",
    data = select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2018",
    proc_macro_deps = [
    ] + select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.60.1",
    deps = [
    ] + select_with_or({
        "//conditions:default": [
            "@crates_vendor__bindgen-0.60.1//:build_script_build",
            "@crates_vendor__bitflags-1.3.2//:bitflags",
            "@crates_vendor__cexpr-0.6.0//:cexpr",
            "@crates_vendor__clang-sys-1.4.0//:clang_sys",
            "@crates_vendor__clap-3.2.22//:clap",
            "@crates_vendor__env_logger-0.9.1//:env_logger",
            "@crates_vendor__lazy_static-1.4.0//:lazy_static",
            "@crates_vendor__lazycell-1.3.0//:lazycell",
            "@crates_vendor__log-0.4.17//:log",
            "@crates_vendor__peeking_take_while-0.1.2//:peeking_take_while",
            "@crates_vendor__proc-macro2-1.0.47//:proc_macro2",
            "@crates_vendor__quote-1.0.21//:quote",
            "@crates_vendor__regex-1.6.0//:regex",
            "@crates_vendor__rustc-hash-1.1.0//:rustc_hash",
            "@crates_vendor__shlex-1.1.0//:shlex",
            "@crates_vendor__which-4.3.0//:which",
        ],
    }),
)

rust_binary(
    name = "bindgen__bin",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = selects.with_or({
        "//conditions:default": {
        },
    }),
    compile_data = glob(
        include = ["**"],
        exclude = [
            "BUILD",
            "BUILD.bazel",
            "WORKSPACE",
            "WORKSPACE.bazel",
        ],
    ) + select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "clap",
        "default",
        "env_logger",
        "log",
        "logging",
        "runtime",
        "which",
        "which-rustfmt",
    ],
    crate_root = "src/main.rs",
    data = select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2018",
    proc_macro_deps = [
    ] + select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    version = "0.60.1",
    deps = [
        ":bindgen",
    ] + select_with_or({
        "//conditions:default": [
            "@crates_vendor__bindgen-0.60.1//:build_script_build",
            "@crates_vendor__bitflags-1.3.2//:bitflags",
            "@crates_vendor__cexpr-0.6.0//:cexpr",
            "@crates_vendor__clang-sys-1.4.0//:clang_sys",
            "@crates_vendor__clap-3.2.22//:clap",
            "@crates_vendor__env_logger-0.9.1//:env_logger",
            "@crates_vendor__lazy_static-1.4.0//:lazy_static",
            "@crates_vendor__lazycell-1.3.0//:lazycell",
            "@crates_vendor__log-0.4.17//:log",
            "@crates_vendor__peeking_take_while-0.1.2//:peeking_take_while",
            "@crates_vendor__proc-macro2-1.0.47//:proc_macro2",
            "@crates_vendor__quote-1.0.21//:quote",
            "@crates_vendor__regex-1.6.0//:regex",
            "@crates_vendor__rustc-hash-1.1.0//:rustc_hash",
            "@crates_vendor__shlex-1.1.0//:shlex",
            "@crates_vendor__which-4.3.0//:which",
        ],
    }),
)

cargo_build_script(
    # See comment associated with alias. Do not change this name
    name = "bindgen_build_script",
    srcs = glob(
        include = [
            "**/*.rs",
        ],
        exclude = [
        ],
    ),
    aliases = selects.with_or({
        "//conditions:default": {
        },
    }),
    build_script_env = {
    },
    compile_data = select_with_or({
        "//conditions:default": [
        ],
    }),
    crate_features = [
        "clap",
        "default",
        "env_logger",
        "log",
        "logging",
        "runtime",
        "which",
        "which-rustfmt",
    ],
    crate_name = "build_script_build",
    crate_root = "build.rs",
    data = glob(["**"]) + select_with_or({
        "//conditions:default": [
        ],
    }),
    edition = "2018",
    proc_macro_deps = [
    ] + select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_env = {
    },
    rustc_env_files = select_with_or({
        "//conditions:default": [
        ],
    }),
    rustc_flags = [
        # In most cases, warnings in 3rd party crates are not interesting as
        # they're out of the control of consumers. The flag here silences
        # warnings. For more details see:
        # https://doc.rust-lang.org/rustc/lints/levels.html
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-bazel",
        "manual",
        "noclippy",
        "norustfmt",
    ],
    tools = select_with_or({
        "//conditions:default": [
        ],
    }),
    version = "0.60.1",
    visibility = ["//visibility:private"],
    deps = [
    ] + select_with_or({
        "//conditions:default": [
        ],
    }),
)

alias(
    # Because `cargo_build_script` does some invisible target name mutating to
    # determine the package and crate name for a build script, the Bazel
    # target namename of any build script cannot be the Cargo canonical name
    # of `build_script_build` without losing out on having certain Cargo
    # environment variables set.
    name = "build_script_build",
    actual = "bindgen_build_script",
    tags = [
        "manual",
    ],
)
