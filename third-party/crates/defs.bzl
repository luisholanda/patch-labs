###############################################################################
# @generated
# DO NOT MODIFY: This file is auto-generated by a crate_universe tool. To
# regenerate this file, run the following:
#
#     bazel run //third-party:crates_vendor
###############################################################################
"""
# `crates_repository` API

- [aliases](#aliases)
- [crate_deps](#crate_deps)
- [all_crate_deps](#all_crate_deps)
- [crate_repositories](#crate_repositories)

"""

load("@bazel_skylib//lib:selects.bzl", "selects")
load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:utils.bzl", "maybe")

###############################################################################
# MACROS API
###############################################################################

# An identifier that represent common dependencies (unconditional).
_COMMON_CONDITION = ""

def _flatten_dependency_maps(all_dependency_maps):
    """Flatten a list of dependency maps into one dictionary.

    Dependency maps have the following structure:

    ```python
    DEPENDENCIES_MAP = {
        # The first key in the map is a Bazel package
        # name of the workspace this file is defined in.
        "workspace_member_package": {

            # Not all dependnecies are supported for all platforms.
            # the condition key is the condition required to be true
            # on the host platform.
            "condition": {

                # An alias to a crate target.     # The label of the crate target the
                # Aliases are only crate names.   # package name refers to.
                "package_name":                   "@full//:label",
            }
        }
    }
    ```

    Args:
        all_dependency_maps (list): A list of dicts as described above

    Returns:
        dict: A dictionary as described above
    """
    dependencies = {}

    for workspace_deps_map in all_dependency_maps:
        for pkg_name, conditional_deps_map in workspace_deps_map.items():
            if pkg_name not in dependencies:
                non_frozen_map = dict()
                for key, values in conditional_deps_map.items():
                    non_frozen_map.update({key: dict(values.items())})
                dependencies.setdefault(pkg_name, non_frozen_map)
                continue

            for condition, deps_map in conditional_deps_map.items():
                # If the condition has not been recorded, do so and continue
                if condition not in dependencies[pkg_name]:
                    dependencies[pkg_name].setdefault(condition, dict(deps_map.items()))
                    continue

                # Alert on any miss-matched dependencies
                inconsistent_entries = []
                for crate_name, crate_label in deps_map.items():
                    existing = dependencies[pkg_name][condition].get(crate_name)
                    if existing and existing != crate_label:
                        inconsistent_entries.append((crate_name, existing, crate_label))
                    dependencies[pkg_name][condition].update({crate_name: crate_label})

    return dependencies

def crate_deps(deps, package_name = None):
    """Finds the fully qualified label of the requested crates for the package where this macro is called.

    Args:
        deps (list): The desired list of crate targets.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()`.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if not deps:
        return []

    if package_name == None:
        package_name = native.package_name()

    # Join both sets of dependencies
    dependencies = _flatten_dependency_maps([
        _NORMAL_DEPENDENCIES,
        _NORMAL_DEV_DEPENDENCIES,
        _PROC_MACRO_DEPENDENCIES,
        _PROC_MACRO_DEV_DEPENDENCIES,
        _BUILD_DEPENDENCIES,
        _BUILD_PROC_MACRO_DEPENDENCIES,
    ]).pop(package_name, {})

    # Combine all conditional packages so we can easily index over a flat list
    # TODO: Perhaps this should actually return select statements and maintain
    # the conditionals of the dependencies
    flat_deps = {}
    for deps_set in dependencies.values():
        for crate_name, crate_label in deps_set.items():
            flat_deps.update({crate_name: crate_label})

    missing_crates = []
    crate_targets = []
    for crate_target in deps:
        if crate_target not in flat_deps:
            missing_crates.append(crate_target)
        else:
            crate_targets.append(flat_deps[crate_target])

    if missing_crates:
        fail("Could not find crates `{}` among dependencies of `{}`. Available dependencies were `{}`".format(
            missing_crates,
            package_name,
            dependencies,
        ))

    return crate_targets

def all_crate_deps(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Finds the fully qualified label of all requested direct crate dependencies \
    for the package where this macro is called.

    If no parameters are set, all normal dependencies are returned. Setting any one flag will
    otherwise impact the contents of the returned list.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normla dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        list: A list of labels to generated rust targets (str)
    """

    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_dependency_maps = []
    if normal:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)
    if normal_dev:
        all_dependency_maps.append(_NORMAL_DEV_DEPENDENCIES)
    if proc_macro:
        all_dependency_maps.append(_PROC_MACRO_DEPENDENCIES)
    if proc_macro_dev:
        all_dependency_maps.append(_PROC_MACRO_DEV_DEPENDENCIES)
    if build:
        all_dependency_maps.append(_BUILD_DEPENDENCIES)
    if build_proc_macro:
        all_dependency_maps.append(_BUILD_PROC_MACRO_DEPENDENCIES)

    # Default to always using normal dependencies
    if not all_dependency_maps:
        all_dependency_maps.append(_NORMAL_DEPENDENCIES)

    dependencies = _flatten_dependency_maps(all_dependency_maps).pop(package_name, None)

    if not dependencies:
        if dependencies == None:
            fail("Tried to get all_crate_deps for package " + package_name + " but that package had no Cargo.toml file")
        else:
            return []

    crate_deps = list(dependencies.pop(_COMMON_CONDITION, {}).values())
    for condition, deps in dependencies.items():
        crate_deps += selects.with_or({_CONDITIONS[condition]: deps.values()})

    return crate_deps

def aliases(
        normal = False,
        normal_dev = False,
        proc_macro = False,
        proc_macro_dev = False,
        build = False,
        build_proc_macro = False,
        package_name = None):
    """Produces a map of Crate alias names to their original label

    If no dependency kinds are specified, `normal` and `proc_macro` are used by default.
    Setting any one flag will otherwise determine the contents of the returned dict.

    Args:
        normal (bool, optional): If True, normal dependencies are included in the
            output list.
        normal_dev (bool, optional): If True, normla dev dependencies will be
            included in the output list..
        proc_macro (bool, optional): If True, proc_macro dependencies are included
            in the output list.
        proc_macro_dev (bool, optional): If True, dev proc_macro dependencies are
            included in the output list.
        build (bool, optional): If True, build dependencies are included
            in the output list.
        build_proc_macro (bool, optional): If True, build proc_macro dependencies are
            included in the output list.
        package_name (str, optional): The package name of the set of dependencies to look up.
            Defaults to `native.package_name()` when unset.

    Returns:
        dict: The aliases of all associated packages
    """
    if package_name == None:
        package_name = native.package_name()

    # Determine the relevant maps to use
    all_aliases_maps = []
    if normal:
        all_aliases_maps.append(_NORMAL_ALIASES)
    if normal_dev:
        all_aliases_maps.append(_NORMAL_DEV_ALIASES)
    if proc_macro:
        all_aliases_maps.append(_PROC_MACRO_ALIASES)
    if proc_macro_dev:
        all_aliases_maps.append(_PROC_MACRO_DEV_ALIASES)
    if build:
        all_aliases_maps.append(_BUILD_ALIASES)
    if build_proc_macro:
        all_aliases_maps.append(_BUILD_PROC_MACRO_ALIASES)

    # Default to always using normal aliases
    if not all_aliases_maps:
        all_aliases_maps.append(_NORMAL_ALIASES)
        all_aliases_maps.append(_PROC_MACRO_ALIASES)

    aliases = _flatten_dependency_maps(all_aliases_maps).pop(package_name, None)

    if not aliases:
        return dict()

    common_items = aliases.pop(_COMMON_CONDITION, {}).items()

    # If there are only common items in the dictionary, immediately return them
    if not len(aliases.keys()) == 1:
        return dict(common_items)

    # Build a single select statement where each conditional has accounted for the
    # common set of aliases.
    crate_aliases = {"//conditions:default": common_items}
    for condition, deps in aliases.items():
        condition_triples = _CONDITIONS[condition]
        if condition_triples in crate_aliases:
            crate_aliases[condition_triples].update(deps)
        else:
            crate_aliases.update({_CONDITIONS[condition]: dict(deps.items() + common_items)})

    return selects.with_or(crate_aliases)

###############################################################################
# WORKSPACE MEMBER DEPS AND ALIASES
###############################################################################

_NORMAL_DEPENDENCIES = {
    "": {
        _COMMON_CONDITION: {
            "argh": "@crates_vendor__argh-0.1.9//:argh",
            "prost": "@crates_vendor__prost-0.11.0//:prost",
            "prost-build": "@crates_vendor__prost-build-0.11.1//:prost_build",
            "prost-types": "@crates_vendor__prost-types-0.11.1//:prost_types",
            "svix-ksuid": "@crates_vendor__svix-ksuid-0.6.0//:svix_ksuid",
            "tokio": "@crates_vendor__tokio-1.21.2//:tokio",
            "tonic": "@crates_vendor__tonic-0.8.2//:tonic",
            "tonic-build": "@crates_vendor__tonic-build-0.8.2//:tonic_build",
        },
    },
}

_NORMAL_ALIASES = {
    "": {
        _COMMON_CONDITION: {
        },
    },
}

_NORMAL_DEV_DEPENDENCIES = {
    "": {
        _COMMON_CONDITION: {
            "mockall": "@crates_vendor__mockall-0.10.2//:mockall",
        },
    },
}

_NORMAL_DEV_ALIASES = {
    "": {
        _COMMON_CONDITION: {
        },
    },
}

_PROC_MACRO_DEPENDENCIES = {
    "": {
        _COMMON_CONDITION: {
            "async-trait": "@crates_vendor__async-trait-0.1.57//:async_trait",
        },
    },
}

_PROC_MACRO_ALIASES = {
    "": {
    },
}

_PROC_MACRO_DEV_DEPENDENCIES = {
    "": {
    },
}

_PROC_MACRO_DEV_ALIASES = {
    "": {
        _COMMON_CONDITION: {
        },
    },
}

_BUILD_DEPENDENCIES = {
    "": {
    },
}

_BUILD_ALIASES = {
    "": {
    },
}

_BUILD_PROC_MACRO_DEPENDENCIES = {
    "": {
    },
}

_BUILD_PROC_MACRO_ALIASES = {
    "": {
    },
}

_CONDITIONS = {
    "aarch64-pc-windows-msvc": [],
    "aarch64-uwp-windows-msvc": [],
    "cfg(all(target_arch = \"wasm32\", target_vendor = \"unknown\", target_os = \"unknown\", target_env = \"\"))": ["wasm32-unknown-unknown"],
    "cfg(any(target_arch = \"x86\", target_arch = \"x86_64\", all(any(target_arch = \"aarch64\", target_arch = \"arm\"), any(target_os = \"android\", target_os = \"fuchsia\", target_os = \"linux\"))))": ["aarch64-linux-android", "aarch64-unknown-linux-gnu", "arm-unknown-linux-gnueabi", "armv7-linux-androideabi", "armv7-unknown-linux-gnueabi", "i686-apple-darwin", "i686-linux-android", "i686-pc-windows-msvc", "i686-unknown-freebsd", "i686-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-apple-ios", "x86_64-linux-android", "x86_64-pc-windows-msvc", "x86_64-unknown-freebsd", "x86_64-unknown-linux-gnu"],
    "cfg(any(target_os = \"android\", target_os = \"linux\"))": ["aarch64-linux-android", "aarch64-unknown-linux-gnu", "arm-unknown-linux-gnueabi", "armv7-linux-androideabi", "armv7-unknown-linux-gnueabi", "i686-linux-android", "i686-unknown-linux-gnu", "powerpc-unknown-linux-gnu", "s390x-unknown-linux-gnu", "x86_64-linux-android", "x86_64-unknown-linux-gnu"],
    "cfg(any(target_os = \"dragonfly\", target_os = \"freebsd\", target_os = \"illumos\", target_os = \"netbsd\", target_os = \"openbsd\", target_os = \"solaris\"))": ["i686-unknown-freebsd", "x86_64-unknown-freebsd"],
    "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"freebsd\"))": ["aarch64-apple-darwin", "aarch64-apple-ios", "aarch64-apple-ios-sim", "i686-apple-darwin", "i686-unknown-freebsd", "x86_64-apple-darwin", "x86_64-apple-ios", "x86_64-unknown-freebsd"],
    "cfg(any(unix, target_os = \"wasi\"))": ["aarch64-apple-darwin", "aarch64-apple-ios", "aarch64-apple-ios-sim", "aarch64-linux-android", "aarch64-unknown-linux-gnu", "arm-unknown-linux-gnueabi", "armv7-linux-androideabi", "armv7-unknown-linux-gnueabi", "i686-apple-darwin", "i686-linux-android", "i686-unknown-freebsd", "i686-unknown-linux-gnu", "powerpc-unknown-linux-gnu", "s390x-unknown-linux-gnu", "wasm32-wasi", "x86_64-apple-darwin", "x86_64-apple-ios", "x86_64-linux-android", "x86_64-unknown-freebsd", "x86_64-unknown-linux-gnu"],
    "cfg(not(any(target_arch = \"wasm32\", target_arch = \"wasm64\")))": ["aarch64-apple-darwin", "aarch64-apple-ios", "aarch64-apple-ios-sim", "aarch64-linux-android", "aarch64-unknown-linux-gnu", "arm-unknown-linux-gnueabi", "armv7-linux-androideabi", "armv7-unknown-linux-gnueabi", "i686-apple-darwin", "i686-linux-android", "i686-pc-windows-msvc", "i686-unknown-freebsd", "i686-unknown-linux-gnu", "powerpc-unknown-linux-gnu", "riscv32imc-unknown-none-elf", "s390x-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-apple-ios", "x86_64-linux-android", "x86_64-pc-windows-msvc", "x86_64-unknown-freebsd", "x86_64-unknown-linux-gnu"],
    "cfg(target_arch = \"wasm32\")": ["wasm32-unknown-unknown", "wasm32-wasi"],
    "cfg(target_family = \"unix\")": ["aarch64-apple-darwin", "aarch64-apple-ios", "aarch64-apple-ios-sim", "aarch64-linux-android", "aarch64-unknown-linux-gnu", "arm-unknown-linux-gnueabi", "armv7-linux-androideabi", "armv7-unknown-linux-gnueabi", "i686-apple-darwin", "i686-linux-android", "i686-unknown-freebsd", "i686-unknown-linux-gnu", "powerpc-unknown-linux-gnu", "s390x-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-apple-ios", "x86_64-linux-android", "x86_64-unknown-freebsd", "x86_64-unknown-linux-gnu"],
    "cfg(target_os = \"redox\")": [],
    "cfg(target_os = \"wasi\")": ["wasm32-wasi"],
    "cfg(target_os = \"windows\")": ["i686-pc-windows-msvc", "x86_64-pc-windows-msvc"],
    "cfg(unix)": ["aarch64-apple-darwin", "aarch64-apple-ios", "aarch64-apple-ios-sim", "aarch64-linux-android", "aarch64-unknown-linux-gnu", "arm-unknown-linux-gnueabi", "armv7-linux-androideabi", "armv7-unknown-linux-gnueabi", "i686-apple-darwin", "i686-linux-android", "i686-unknown-freebsd", "i686-unknown-linux-gnu", "powerpc-unknown-linux-gnu", "s390x-unknown-linux-gnu", "x86_64-apple-darwin", "x86_64-apple-ios", "x86_64-linux-android", "x86_64-unknown-freebsd", "x86_64-unknown-linux-gnu"],
    "cfg(windows)": ["i686-pc-windows-msvc", "x86_64-pc-windows-msvc"],
    "i686-pc-windows-gnu": [],
    "i686-pc-windows-msvc": ["i686-pc-windows-msvc"],
    "i686-uwp-windows-gnu": [],
    "i686-uwp-windows-msvc": [],
    "x86_64-pc-windows-gnu": [],
    "x86_64-pc-windows-msvc": ["x86_64-pc-windows-msvc"],
    "x86_64-uwp-windows-gnu": [],
    "x86_64-uwp-windows-msvc": [],
}

###############################################################################

def crate_repositories():
    """A macro for defining repositories for all generated crates"""
    maybe(
        http_archive,
        name = "crates_vendor__aho-corasick-0.7.19",
        sha256 = "b4f55bd91a0978cbfd91c457a164bab8b4001c833b7f323132c0a4e1922dd44e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/aho-corasick/0.7.19/download"],
        strip_prefix = "aho-corasick-0.7.19",
        build_file = Label("@patch-labs//third-party/crates:BUILD.aho-corasick-0.7.19.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__anyhow-1.0.65",
        sha256 = "98161a4e3e2184da77bb14f02184cdd111e83bbbcc9979dfee3c44b9a85f5602",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/anyhow/1.0.65/download"],
        strip_prefix = "anyhow-1.0.65",
        build_file = Label("@patch-labs//third-party/crates:BUILD.anyhow-1.0.65.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__argh-0.1.9",
        sha256 = "c375edecfd2074d5edcc31396860b6e54b6f928714d0e097b983053fac0cabe3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/argh/0.1.9/download"],
        strip_prefix = "argh-0.1.9",
        build_file = Label("@patch-labs//third-party/crates:BUILD.argh-0.1.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__argh_derive-0.1.9",
        sha256 = "aa013479b80109a1bf01a039412b0f0013d716f36921226d86c6709032fb7a03",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/argh_derive/0.1.9/download"],
        strip_prefix = "argh_derive-0.1.9",
        build_file = Label("@patch-labs//third-party/crates:BUILD.argh_derive-0.1.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__argh_shared-0.1.9",
        sha256 = "149f75bbec1827618262e0855a68f0f9a7f2edc13faebf33c4f16d6725edb6a9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/argh_shared/0.1.9/download"],
        strip_prefix = "argh_shared-0.1.9",
        build_file = Label("@patch-labs//third-party/crates:BUILD.argh_shared-0.1.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__async-stream-0.3.3",
        sha256 = "dad5c83079eae9969be7fadefe640a1c566901f05ff91ab221de4b6f68d9507e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/async-stream/0.3.3/download"],
        strip_prefix = "async-stream-0.3.3",
        build_file = Label("@patch-labs//third-party/crates:BUILD.async-stream-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__async-stream-impl-0.3.3",
        sha256 = "10f203db73a71dfa2fb6dd22763990fa26f3d2625a6da2da900d23b87d26be27",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/async-stream-impl/0.3.3/download"],
        strip_prefix = "async-stream-impl-0.3.3",
        build_file = Label("@patch-labs//third-party/crates:BUILD.async-stream-impl-0.3.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__async-trait-0.1.57",
        sha256 = "76464446b8bc32758d7e88ee1a804d9914cd9b1cb264c029899680b0be29826f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/async-trait/0.1.57/download"],
        strip_prefix = "async-trait-0.1.57",
        build_file = Label("@patch-labs//third-party/crates:BUILD.async-trait-0.1.57.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__autocfg-1.1.0",
        sha256 = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/autocfg/1.1.0/download"],
        strip_prefix = "autocfg-1.1.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.autocfg-1.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__axum-0.5.16",
        sha256 = "c9e3356844c4d6a6d6467b8da2cffb4a2820be256f50a3a386c9d152bab31043",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/axum/0.5.16/download"],
        strip_prefix = "axum-0.5.16",
        build_file = Label("@patch-labs//third-party/crates:BUILD.axum-0.5.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__axum-core-0.2.8",
        sha256 = "d9f0c0a60006f2a293d82d571f635042a72edf927539b7685bd62d361963839b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/axum-core/0.2.8/download"],
        strip_prefix = "axum-core-0.2.8",
        build_file = Label("@patch-labs//third-party/crates:BUILD.axum-core-0.2.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__base-encode-0.3.1",
        sha256 = "a17bd29f7c70f32e9387f4d4acfa5ea7b7749ef784fb78cf382df97069337b8c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/base-encode/0.3.1/download"],
        strip_prefix = "base-encode-0.3.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.base-encode-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__base64-0.13.0",
        sha256 = "904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/base64/0.13.0/download"],
        strip_prefix = "base64-0.13.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.base64-0.13.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__bitflags-1.3.2",
        sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bitflags/1.3.2/download"],
        strip_prefix = "bitflags-1.3.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.bitflags-1.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__bumpalo-3.11.0",
        sha256 = "c1ad822118d20d2c234f427000d5acc36eabe1e29a348c89b63dd60b13f28e5d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bumpalo/3.11.0/download"],
        strip_prefix = "bumpalo-3.11.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.bumpalo-3.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__byteorder-1.4.3",
        sha256 = "14c189c53d098945499cdfa7ecc63567cf3886b3332b312a5b4585d8d3a6a610",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/byteorder/1.4.3/download"],
        strip_prefix = "byteorder-1.4.3",
        build_file = Label("@patch-labs//third-party/crates:BUILD.byteorder-1.4.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__bytes-1.2.1",
        sha256 = "ec8a7b6a70fde80372154c65702f00a0f56f3e1c36abbc6c440484be248856db",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/bytes/1.2.1/download"],
        strip_prefix = "bytes-1.2.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.bytes-1.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cc-1.0.73",
        sha256 = "2fff2a6927b3bb87f9595d67196a70493f627687a71d87a0d692242c33f58c11",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/cc/1.0.73/download"],
        strip_prefix = "cc-1.0.73",
        build_file = Label("@patch-labs//third-party/crates:BUILD.cc-1.0.73.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__cfg-if-1.0.0",
        sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/cfg-if/1.0.0/download"],
        strip_prefix = "cfg-if-1.0.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.cfg-if-1.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__difference-2.0.0",
        sha256 = "524cbf6897b527295dff137cec09ecf3a05f4fddffd7dfcd1585403449e74198",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/difference/2.0.0/download"],
        strip_prefix = "difference-2.0.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.difference-2.0.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__downcast-0.10.0",
        sha256 = "4bb454f0228b18c7f4c3b0ebbee346ed9c52e7443b0999cd543ff3571205701d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/downcast/0.10.0/download"],
        strip_prefix = "downcast-0.10.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.downcast-0.10.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__either-1.8.0",
        sha256 = "90e5c1c8368803113bf0c9584fc495a58b86dc8a29edbf8fe877d21d9507e797",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/either/1.8.0/download"],
        strip_prefix = "either-1.8.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.either-1.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__fastrand-1.8.0",
        sha256 = "a7a407cfaa3385c4ae6b23e84623d48c2798d06e3e6a1878f7f59f17b3f86499",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fastrand/1.8.0/download"],
        strip_prefix = "fastrand-1.8.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.fastrand-1.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__fixedbitset-0.4.2",
        sha256 = "0ce7134b9999ecaf8bcd65542e436736ef32ddca1b3e06094cb6ec5755203b80",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fixedbitset/0.4.2/download"],
        strip_prefix = "fixedbitset-0.4.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.fixedbitset-0.4.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__float-cmp-0.8.0",
        sha256 = "e1267f4ac4f343772758f7b1bdcbe767c218bbab93bb432acbf5162bbf85a6c4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/float-cmp/0.8.0/download"],
        strip_prefix = "float-cmp-0.8.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.float-cmp-0.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__fnv-1.0.7",
        sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fnv/1.0.7/download"],
        strip_prefix = "fnv-1.0.7",
        build_file = Label("@patch-labs//third-party/crates:BUILD.fnv-1.0.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__fragile-1.2.1",
        sha256 = "85dcb89d2b10c5f6133de2efd8c11959ce9dbb46a2f7a4cab208c4eeda6ce1ab",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/fragile/1.2.1/download"],
        strip_prefix = "fragile-1.2.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.fragile-1.2.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-channel-0.3.24",
        sha256 = "30bdd20c28fadd505d0fd6712cdfcb0d4b5648baf45faef7f852afb2399bb050",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-channel/0.3.24/download"],
        strip_prefix = "futures-channel-0.3.24",
        build_file = Label("@patch-labs//third-party/crates:BUILD.futures-channel-0.3.24.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-core-0.3.24",
        sha256 = "4e5aa3de05362c3fb88de6531e6296e85cde7739cccad4b9dfeeb7f6ebce56bf",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-core/0.3.24/download"],
        strip_prefix = "futures-core-0.3.24",
        build_file = Label("@patch-labs//third-party/crates:BUILD.futures-core-0.3.24.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-sink-0.3.24",
        sha256 = "21b20ba5a92e727ba30e72834706623d94ac93a725410b6a6b6fbc1b07f7ba56",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-sink/0.3.24/download"],
        strip_prefix = "futures-sink-0.3.24",
        build_file = Label("@patch-labs//third-party/crates:BUILD.futures-sink-0.3.24.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-task-0.3.24",
        sha256 = "a6508c467c73851293f390476d4491cf4d227dbabcd4170f3bb6044959b294f1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-task/0.3.24/download"],
        strip_prefix = "futures-task-0.3.24",
        build_file = Label("@patch-labs//third-party/crates:BUILD.futures-task-0.3.24.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__futures-util-0.3.24",
        sha256 = "44fb6cb1be61cc1d2e43b262516aafcf63b241cffdb1d3fa115f91d9c7b09c90",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/futures-util/0.3.24/download"],
        strip_prefix = "futures-util-0.3.24",
        build_file = Label("@patch-labs//third-party/crates:BUILD.futures-util-0.3.24.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__getrandom-0.2.7",
        sha256 = "4eb1a864a501629691edf6c15a593b7a51eebaa1e8468e9ddc623de7c9b58ec6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/getrandom/0.2.7/download"],
        strip_prefix = "getrandom-0.2.7",
        build_file = Label("@patch-labs//third-party/crates:BUILD.getrandom-0.2.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__h2-0.3.14",
        sha256 = "5ca32592cf21ac7ccab1825cd87f6c9b3d9022c44d086172ed0966bec8af30be",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/h2/0.3.14/download"],
        strip_prefix = "h2-0.3.14",
        build_file = Label("@patch-labs//third-party/crates:BUILD.h2-0.3.14.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__hashbrown-0.12.3",
        sha256 = "8a9ee70c43aaf417c914396645a0fa852624801b24ebb7ae78fe8272889ac888",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hashbrown/0.12.3/download"],
        strip_prefix = "hashbrown-0.12.3",
        build_file = Label("@patch-labs//third-party/crates:BUILD.hashbrown-0.12.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__heck-0.4.0",
        sha256 = "2540771e65fc8cb83cd6e8a237f70c319bd5c29f78ed1084ba5d50eeac86f7f9",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/heck/0.4.0/download"],
        strip_prefix = "heck-0.4.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.heck-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__http-0.2.8",
        sha256 = "75f43d41e26995c17e71ee126451dd3941010b0514a81a9d11f3b341debc2399",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/http/0.2.8/download"],
        strip_prefix = "http-0.2.8",
        build_file = Label("@patch-labs//third-party/crates:BUILD.http-0.2.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__http-body-0.4.5",
        sha256 = "d5f38f16d184e36f2408a55281cd658ecbd3ca05cce6d6510a176eca393e26d1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/http-body/0.4.5/download"],
        strip_prefix = "http-body-0.4.5",
        build_file = Label("@patch-labs//third-party/crates:BUILD.http-body-0.4.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__http-range-header-0.3.0",
        sha256 = "0bfe8eed0a9285ef776bb792479ea3834e8b94e13d615c2f66d03dd50a435a29",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/http-range-header/0.3.0/download"],
        strip_prefix = "http-range-header-0.3.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.http-range-header-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__httparse-1.8.0",
        sha256 = "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/httparse/1.8.0/download"],
        strip_prefix = "httparse-1.8.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.httparse-1.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__httpdate-1.0.2",
        sha256 = "c4a1e36c821dbe04574f602848a19f742f4fb3c98d40449f11bcad18d6b17421",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/httpdate/1.0.2/download"],
        strip_prefix = "httpdate-1.0.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.httpdate-1.0.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__hyper-0.14.20",
        sha256 = "02c929dc5c39e335a03c405292728118860721b10190d98c2a0f0efd5baafbac",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hyper/0.14.20/download"],
        strip_prefix = "hyper-0.14.20",
        build_file = Label("@patch-labs//third-party/crates:BUILD.hyper-0.14.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__hyper-timeout-0.4.1",
        sha256 = "bbb958482e8c7be4bc3cf272a766a2b0bf1a6755e7a6ae777f017a31d11b13b1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/hyper-timeout/0.4.1/download"],
        strip_prefix = "hyper-timeout-0.4.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.hyper-timeout-0.4.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__indexmap-1.9.1",
        sha256 = "10a35a97730320ffe8e2d410b5d3b69279b98d2c14bdb8b70ea89ecf7888d41e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/indexmap/1.9.1/download"],
        strip_prefix = "indexmap-1.9.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.indexmap-1.9.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__instant-0.1.12",
        sha256 = "7a5bbe824c507c5da5956355e86a746d82e0e1464f65d862cc5e71da70e94b2c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/instant/0.1.12/download"],
        strip_prefix = "instant-0.1.12",
        build_file = Label("@patch-labs//third-party/crates:BUILD.instant-0.1.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__itertools-0.10.5",
        sha256 = "b0fd2260e829bddf4cb6ea802289de2f86d6a7a690192fbe91b3f46e0f2c8473",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/itertools/0.10.5/download"],
        strip_prefix = "itertools-0.10.5",
        build_file = Label("@patch-labs//third-party/crates:BUILD.itertools-0.10.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__itoa-1.0.4",
        sha256 = "4217ad341ebadf8d8e724e264f13e593e0648f5b3e94b3896a5df283be015ecc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/itoa/1.0.4/download"],
        strip_prefix = "itoa-1.0.4",
        build_file = Label("@patch-labs//third-party/crates:BUILD.itoa-1.0.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__js-sys-0.3.60",
        sha256 = "49409df3e3bf0856b916e2ceaca09ee28e6871cf7d9ce97a692cacfdb2a25a47",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/js-sys/0.3.60/download"],
        strip_prefix = "js-sys-0.3.60",
        build_file = Label("@patch-labs//third-party/crates:BUILD.js-sys-0.3.60.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__lazy_static-1.4.0",
        sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/lazy_static/1.4.0/download"],
        strip_prefix = "lazy_static-1.4.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.lazy_static-1.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__libc-0.2.135",
        sha256 = "68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/libc/0.2.135/download"],
        strip_prefix = "libc-0.2.135",
        build_file = Label("@patch-labs//third-party/crates:BUILD.libc-0.2.135.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__log-0.4.17",
        sha256 = "abb12e687cfb44aa40f41fc3978ef76448f9b6038cad6aef4259d3c095a2382e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/log/0.4.17/download"],
        strip_prefix = "log-0.4.17",
        build_file = Label("@patch-labs//third-party/crates:BUILD.log-0.4.17.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__matchit-0.5.0",
        sha256 = "73cbba799671b762df5a175adf59ce145165747bb891505c43d09aefbbf38beb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/matchit/0.5.0/download"],
        strip_prefix = "matchit-0.5.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.matchit-0.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__memchr-2.5.0",
        sha256 = "2dffe52ecf27772e601905b7522cb4ef790d2cc203488bbd0e2fe85fcb74566d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/memchr/2.5.0/download"],
        strip_prefix = "memchr-2.5.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.memchr-2.5.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__mime-0.3.16",
        sha256 = "2a60c7ce501c71e03a9c9c0d35b861413ae925bd979cc7a4e30d060069aaac8d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mime/0.3.16/download"],
        strip_prefix = "mime-0.3.16",
        build_file = Label("@patch-labs//third-party/crates:BUILD.mime-0.3.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__mio-0.8.4",
        sha256 = "57ee1c23c7c63b0c9250c339ffdc69255f110b298b901b9f6c82547b7b87caaf",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mio/0.8.4/download"],
        strip_prefix = "mio-0.8.4",
        build_file = Label("@patch-labs//third-party/crates:BUILD.mio-0.8.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__mockall-0.10.2",
        sha256 = "6ab571328afa78ae322493cacca3efac6a0f2e0a67305b4df31fd439ef129ac0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mockall/0.10.2/download"],
        strip_prefix = "mockall-0.10.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.mockall-0.10.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__mockall_derive-0.10.2",
        sha256 = "e7e25b214433f669161f414959594216d8e6ba83b6679d3db96899c0b4639033",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/mockall_derive/0.10.2/download"],
        strip_prefix = "mockall_derive-0.10.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.mockall_derive-0.10.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__multimap-0.8.3",
        sha256 = "e5ce46fe64a9d73be07dcbe690a38ce1b293be448fd8ce1e6c1b8062c9f72c6a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/multimap/0.8.3/download"],
        strip_prefix = "multimap-0.8.3",
        build_file = Label("@patch-labs//third-party/crates:BUILD.multimap-0.8.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__normalize-line-endings-0.3.0",
        sha256 = "61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/normalize-line-endings/0.3.0/download"],
        strip_prefix = "normalize-line-endings-0.3.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.normalize-line-endings-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__num-traits-0.2.15",
        sha256 = "578ede34cf02f8924ab9447f50c28075b4d3e5b269972345e7e0372b38c6cdcd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num-traits/0.2.15/download"],
        strip_prefix = "num-traits-0.2.15",
        build_file = Label("@patch-labs//third-party/crates:BUILD.num-traits-0.2.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__num_threads-0.1.6",
        sha256 = "2819ce041d2ee131036f4fc9d6ae7ae125a3a40e97ba64d04fe799ad9dabbb44",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/num_threads/0.1.6/download"],
        strip_prefix = "num_threads-0.1.6",
        build_file = Label("@patch-labs//third-party/crates:BUILD.num_threads-0.1.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__once_cell-1.15.0",
        sha256 = "e82dad04139b71a90c080c8463fe0dc7902db5192d939bd0950f074d014339e1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/once_cell/1.15.0/download"],
        strip_prefix = "once_cell-1.15.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.once_cell-1.15.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__percent-encoding-2.2.0",
        sha256 = "478c572c3d73181ff3c2539045f6eb99e5491218eae919370993b890cdbdd98e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/percent-encoding/2.2.0/download"],
        strip_prefix = "percent-encoding-2.2.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.percent-encoding-2.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__petgraph-0.6.2",
        sha256 = "e6d5014253a1331579ce62aa67443b4a658c5e7dd03d4bc6d302b94474888143",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/petgraph/0.6.2/download"],
        strip_prefix = "petgraph-0.6.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.petgraph-0.6.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pin-project-1.0.12",
        sha256 = "ad29a609b6bcd67fee905812e544992d216af9d755757c05ed2d0e15a74c6ecc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project/1.0.12/download"],
        strip_prefix = "pin-project-1.0.12",
        build_file = Label("@patch-labs//third-party/crates:BUILD.pin-project-1.0.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pin-project-internal-1.0.12",
        sha256 = "069bdb1e05adc7a8990dce9cc75370895fbe4e3d58b9b73bf1aee56359344a55",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project-internal/1.0.12/download"],
        strip_prefix = "pin-project-internal-1.0.12",
        build_file = Label("@patch-labs//third-party/crates:BUILD.pin-project-internal-1.0.12.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pin-project-lite-0.2.9",
        sha256 = "e0a7ae3ac2f1173085d398531c705756c94a4c56843785df85a60c1a0afac116",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-project-lite/0.2.9/download"],
        strip_prefix = "pin-project-lite-0.2.9",
        build_file = Label("@patch-labs//third-party/crates:BUILD.pin-project-lite-0.2.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__pin-utils-0.1.0",
        sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/pin-utils/0.1.0/download"],
        strip_prefix = "pin-utils-0.1.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.pin-utils-0.1.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__ppv-lite86-0.2.16",
        sha256 = "eb9f9e6e233e5c4a35559a617bf40a4ec447db2e84c20b55a6f83167b7e57872",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ppv-lite86/0.2.16/download"],
        strip_prefix = "ppv-lite86-0.2.16",
        build_file = Label("@patch-labs//third-party/crates:BUILD.ppv-lite86-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__predicates-1.0.8",
        sha256 = "f49cfaf7fdaa3bfacc6fa3e7054e65148878354a5cfddcf661df4c851f8021df",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/predicates/1.0.8/download"],
        strip_prefix = "predicates-1.0.8",
        build_file = Label("@patch-labs//third-party/crates:BUILD.predicates-1.0.8.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__predicates-core-1.0.3",
        sha256 = "da1c2388b1513e1b605fcec39a95e0a9e8ef088f71443ef37099fa9ae6673fcb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/predicates-core/1.0.3/download"],
        strip_prefix = "predicates-core-1.0.3",
        build_file = Label("@patch-labs//third-party/crates:BUILD.predicates-core-1.0.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__predicates-tree-1.0.5",
        sha256 = "4d86de6de25020a36c6d3643a86d9a6a9f552107c0559c60ea03551b5e16c032",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/predicates-tree/1.0.5/download"],
        strip_prefix = "predicates-tree-1.0.5",
        build_file = Label("@patch-labs//third-party/crates:BUILD.predicates-tree-1.0.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__prettyplease-0.1.20",
        sha256 = "83fead41e178796ef8274dc612a7d8ce4c7e10ca35cd2c5b5ad24cac63aeb6c0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/prettyplease/0.1.20/download"],
        strip_prefix = "prettyplease-0.1.20",
        build_file = Label("@patch-labs//third-party/crates:BUILD.prettyplease-0.1.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__proc-macro2-1.0.46",
        sha256 = "94e2ef8dbfc347b10c094890f778ee2e36ca9bb4262e86dc99cd217e35f3470b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/proc-macro2/1.0.46/download"],
        strip_prefix = "proc-macro2-1.0.46",
        build_file = Label("@patch-labs//third-party/crates:BUILD.proc-macro2-1.0.46.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__prost-0.11.0",
        sha256 = "399c3c31cdec40583bb68f0b18403400d01ec4289c383aa047560439952c4dd7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/prost/0.11.0/download"],
        strip_prefix = "prost-0.11.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.prost-0.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__prost-build-0.11.1",
        sha256 = "7f835c582e6bd972ba8347313300219fed5bfa52caf175298d860b61ff6069bb",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/prost-build/0.11.1/download"],
        strip_prefix = "prost-build-0.11.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.prost-build-0.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__prost-derive-0.11.0",
        sha256 = "7345d5f0e08c0536d7ac7229952590239e77abf0a0100a1b1d890add6ea96364",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/prost-derive/0.11.0/download"],
        strip_prefix = "prost-derive-0.11.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.prost-derive-0.11.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__prost-types-0.11.1",
        sha256 = "4dfaa718ad76a44b3415e6c4d53b17c8f99160dcb3a99b10470fce8ad43f6e3e",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/prost-types/0.11.1/download"],
        strip_prefix = "prost-types-0.11.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.prost-types-0.11.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__quote-1.0.21",
        sha256 = "bbe448f377a7d6961e30f5955f9b8d106c3f5e449d493ee1b125c1d43c2b5179",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/quote/1.0.21/download"],
        strip_prefix = "quote-1.0.21",
        build_file = Label("@patch-labs//third-party/crates:BUILD.quote-1.0.21.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand-0.8.5",
        sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rand/0.8.5/download"],
        strip_prefix = "rand-0.8.5",
        build_file = Label("@patch-labs//third-party/crates:BUILD.rand-0.8.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand_chacha-0.3.1",
        sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rand_chacha/0.3.1/download"],
        strip_prefix = "rand_chacha-0.3.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.rand_chacha-0.3.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rand_core-0.6.4",
        sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rand_core/0.6.4/download"],
        strip_prefix = "rand_core-0.6.4",
        build_file = Label("@patch-labs//third-party/crates:BUILD.rand_core-0.6.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__redox_syscall-0.2.16",
        sha256 = "fb5a58c1855b4b6819d59012155603f0b22ad30cad752600aadfcb695265519a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/redox_syscall/0.2.16/download"],
        strip_prefix = "redox_syscall-0.2.16",
        build_file = Label("@patch-labs//third-party/crates:BUILD.redox_syscall-0.2.16.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__regex-1.6.0",
        sha256 = "4c4eb3267174b8c6c2f654116623910a0fef09c4753f8dd83db29c48a0df988b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/regex/1.6.0/download"],
        strip_prefix = "regex-1.6.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.regex-1.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__regex-syntax-0.6.27",
        sha256 = "a3f87b73ce11b1619a3c6332f45341e0047173771e8b8b73f87bfeefb7b56244",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/regex-syntax/0.6.27/download"],
        strip_prefix = "regex-syntax-0.6.27",
        build_file = Label("@patch-labs//third-party/crates:BUILD.regex-syntax-0.6.27.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__remove_dir_all-0.5.3",
        sha256 = "3acd125665422973a33ac9d3dd2df85edad0f4ae9b00dafb1a05e43a9f5ef8e7",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/remove_dir_all/0.5.3/download"],
        strip_prefix = "remove_dir_all-0.5.3",
        build_file = Label("@patch-labs//third-party/crates:BUILD.remove_dir_all-0.5.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__ring-0.16.20",
        sha256 = "3053cf52e236a3ed746dfc745aa9cacf1b791d846bdaf412f60a8d7d6e17c8fc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/ring/0.16.20/download"],
        strip_prefix = "ring-0.16.20",
        build_file = Label("@patch-labs//third-party/crates:BUILD.ring-0.16.20.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustls-0.20.6",
        sha256 = "5aab8ee6c7097ed6057f43c187a62418d0c05a4bd5f18b3571db50ee0f9ce033",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustls/0.20.6/download"],
        strip_prefix = "rustls-0.20.6",
        build_file = Label("@patch-labs//third-party/crates:BUILD.rustls-0.20.6.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__rustls-pemfile-1.0.1",
        sha256 = "0864aeff53f8c05aa08d86e5ef839d3dfcf07aeba2db32f12db0ef716e87bd55",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/rustls-pemfile/1.0.1/download"],
        strip_prefix = "rustls-pemfile-1.0.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.rustls-pemfile-1.0.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__sct-0.7.0",
        sha256 = "d53dcdb7c9f8158937a7981b48accfd39a43af418591a5d008c7b22b5e1b7ca4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sct/0.7.0/download"],
        strip_prefix = "sct-0.7.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.sct-0.7.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__serde-1.0.145",
        sha256 = "728eb6351430bccb993660dfffc5a72f91ccc1295abaa8ce19b27ebe4f75568b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/serde/1.0.145/download"],
        strip_prefix = "serde-1.0.145",
        build_file = Label("@patch-labs//third-party/crates:BUILD.serde-1.0.145.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__slab-0.4.7",
        sha256 = "4614a76b2a8be0058caa9dbbaf66d988527d86d003c11a94fbd335d7661edcef",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/slab/0.4.7/download"],
        strip_prefix = "slab-0.4.7",
        build_file = Label("@patch-labs//third-party/crates:BUILD.slab-0.4.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__socket2-0.4.7",
        sha256 = "02e2d2db9033d13a1567121ddd7a095ee144db4e1ca1b1bda3419bc0da294ebd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/socket2/0.4.7/download"],
        strip_prefix = "socket2-0.4.7",
        build_file = Label("@patch-labs//third-party/crates:BUILD.socket2-0.4.7.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__spin-0.5.2",
        sha256 = "6e63cff320ae2c57904679ba7cb63280a3dc4613885beafb148ee7bf9aa9042d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/spin/0.5.2/download"],
        strip_prefix = "spin-0.5.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.spin-0.5.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__svix-ksuid-0.6.0",
        sha256 = "ca50325f94cd44757a8a79749ff16d60d46fd50d4a5da62eb864ff1afd0fa87d",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/svix-ksuid/0.6.0/download"],
        strip_prefix = "svix-ksuid-0.6.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.svix-ksuid-0.6.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__syn-1.0.102",
        sha256 = "3fcd952facd492f9be3ef0d0b7032a6e442ee9b361d4acc2b1d0c4aaa5f613a1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/syn/1.0.102/download"],
        strip_prefix = "syn-1.0.102",
        build_file = Label("@patch-labs//third-party/crates:BUILD.syn-1.0.102.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__sync_wrapper-0.1.1",
        sha256 = "20518fe4a4c9acf048008599e464deb21beeae3d3578418951a189c235a7a9a8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/sync_wrapper/0.1.1/download"],
        strip_prefix = "sync_wrapper-0.1.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.sync_wrapper-0.1.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tempfile-3.3.0",
        sha256 = "5cdb1ef4eaeeaddc8fbd371e5017057064af0911902ef36b39801f67cc6d79e4",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tempfile/3.3.0/download"],
        strip_prefix = "tempfile-3.3.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tempfile-3.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__termtree-0.2.4",
        sha256 = "507e9898683b6c43a9aa55b64259b721b52ba226e0f3779137e50ad114a4c90b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/termtree/0.2.4/download"],
        strip_prefix = "termtree-0.2.4",
        build_file = Label("@patch-labs//third-party/crates:BUILD.termtree-0.2.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__time-0.3.15",
        sha256 = "d634a985c4d4238ec39cacaed2e7ae552fbd3c476b552c1deac3021b7d7eaf0c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/time/0.3.15/download"],
        strip_prefix = "time-0.3.15",
        build_file = Label("@patch-labs//third-party/crates:BUILD.time-0.3.15.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tokio-1.21.2",
        sha256 = "a9e03c497dc955702ba729190dc4aac6f2a0ce97f913e5b1b5912fc5039d9099",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio/1.21.2/download"],
        strip_prefix = "tokio-1.21.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tokio-1.21.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tokio-io-timeout-1.2.0",
        sha256 = "30b74022ada614a1b4834de765f9bb43877f910cc8ce4be40e89042c9223a8bf",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-io-timeout/1.2.0/download"],
        strip_prefix = "tokio-io-timeout-1.2.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tokio-io-timeout-1.2.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tokio-macros-1.8.0",
        sha256 = "9724f9a975fb987ef7a3cd9be0350edcbe130698af5b8f7a631e23d42d052484",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-macros/1.8.0/download"],
        strip_prefix = "tokio-macros-1.8.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tokio-macros-1.8.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tokio-rustls-0.23.4",
        sha256 = "c43ee83903113e03984cb9e5cebe6c04a5116269e900e3ddba8f068a62adda59",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-rustls/0.23.4/download"],
        strip_prefix = "tokio-rustls-0.23.4",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tokio-rustls-0.23.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tokio-stream-0.1.11",
        sha256 = "d660770404473ccd7bc9f8b28494a811bc18542b915c0855c51e8f419d5223ce",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-stream/0.1.11/download"],
        strip_prefix = "tokio-stream-0.1.11",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tokio-stream-0.1.11.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tokio-util-0.7.4",
        sha256 = "0bb2e075f03b3d66d8d8785356224ba688d2906a371015e225beeb65ca92c740",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tokio-util/0.7.4/download"],
        strip_prefix = "tokio-util-0.7.4",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tokio-util-0.7.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tonic-0.8.2",
        sha256 = "55b9af819e54b8f33d453655bef9b9acc171568fb49523078d0cc4e7484200ec",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tonic/0.8.2/download"],
        strip_prefix = "tonic-0.8.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tonic-0.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tonic-build-0.8.2",
        sha256 = "48c6fd7c2581e36d63388a9e04c350c21beb7a8b059580b2e93993c526899ddc",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tonic-build/0.8.2/download"],
        strip_prefix = "tonic-build-0.8.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tonic-build-0.8.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tower-0.4.13",
        sha256 = "b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower/0.4.13/download"],
        strip_prefix = "tower-0.4.13",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tower-0.4.13.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tower-http-0.3.4",
        sha256 = "3c530c8675c1dbf98facee631536fa116b5fb6382d7dd6dc1b118d970eafe3ba",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower-http/0.3.4/download"],
        strip_prefix = "tower-http-0.3.4",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tower-http-0.3.4.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tower-layer-0.3.2",
        sha256 = "c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower-layer/0.3.2/download"],
        strip_prefix = "tower-layer-0.3.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tower-layer-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tower-service-0.3.2",
        sha256 = "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tower-service/0.3.2/download"],
        strip_prefix = "tower-service-0.3.2",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tower-service-0.3.2.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tracing-0.1.37",
        sha256 = "8ce8c33a8d48bd45d624a6e523445fd21ec13d3653cd51f681abf67418f54eb8",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing/0.1.37/download"],
        strip_prefix = "tracing-0.1.37",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tracing-0.1.37.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tracing-attributes-0.1.23",
        sha256 = "4017f8f45139870ca7e672686113917c71c7a6e02d4924eda67186083c03081a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-attributes/0.1.23/download"],
        strip_prefix = "tracing-attributes-0.1.23",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tracing-attributes-0.1.23.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tracing-core-0.1.30",
        sha256 = "24eb03ba0eab1fd845050058ce5e616558e8f8d8fca633e6b163fe25c797213a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-core/0.1.30/download"],
        strip_prefix = "tracing-core-0.1.30",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tracing-core-0.1.30.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__tracing-futures-0.2.5",
        sha256 = "97d095ae15e245a057c8e8451bab9b3ee1e1f68e9ba2b4fbc18d0ac5237835f2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/tracing-futures/0.2.5/download"],
        strip_prefix = "tracing-futures-0.2.5",
        build_file = Label("@patch-labs//third-party/crates:BUILD.tracing-futures-0.2.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__try-lock-0.2.3",
        sha256 = "59547bce71d9c38b83d9c0e92b6066c4253371f15005def0c30d9657f50c7642",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/try-lock/0.2.3/download"],
        strip_prefix = "try-lock-0.2.3",
        build_file = Label("@patch-labs//third-party/crates:BUILD.try-lock-0.2.3.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__unicode-ident-1.0.5",
        sha256 = "6ceab39d59e4c9499d4e5a8ee0e2735b891bb7308ac83dfb4e80cad195c9f6f3",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/unicode-ident/1.0.5/download"],
        strip_prefix = "unicode-ident-1.0.5",
        build_file = Label("@patch-labs//third-party/crates:BUILD.unicode-ident-1.0.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__untrusted-0.7.1",
        sha256 = "a156c684c91ea7d62626509bce3cb4e1d9ed5c4d978f7b4352658f96a4c26b4a",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/untrusted/0.7.1/download"],
        strip_prefix = "untrusted-0.7.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.untrusted-0.7.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__want-0.3.0",
        sha256 = "1ce8a968cb1cd110d136ff8b819a556d6fb6d919363c61534f6860c7eb172ba0",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/want/0.3.0/download"],
        strip_prefix = "want-0.3.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.want-0.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasi-0.11.0-wasi-snapshot-preview1",
        sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasi/0.11.0+wasi-snapshot-preview1/download"],
        strip_prefix = "wasi-0.11.0+wasi-snapshot-preview1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.wasi-0.11.0+wasi-snapshot-preview1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasm-bindgen-0.2.83",
        sha256 = "eaf9f5aceeec8be17c128b2e93e031fb8a4d469bb9c4ae2d7dc1888b26887268",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen/0.2.83/download"],
        strip_prefix = "wasm-bindgen-0.2.83",
        build_file = Label("@patch-labs//third-party/crates:BUILD.wasm-bindgen-0.2.83.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasm-bindgen-backend-0.2.83",
        sha256 = "4c8ffb332579b0557b52d268b91feab8df3615f265d5270fec2a8c95b17c1142",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-backend/0.2.83/download"],
        strip_prefix = "wasm-bindgen-backend-0.2.83",
        build_file = Label("@patch-labs//third-party/crates:BUILD.wasm-bindgen-backend-0.2.83.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasm-bindgen-macro-0.2.83",
        sha256 = "052be0f94026e6cbc75cdefc9bae13fd6052cdcaf532fa6c45e7ae33a1e6c810",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-macro/0.2.83/download"],
        strip_prefix = "wasm-bindgen-macro-0.2.83",
        build_file = Label("@patch-labs//third-party/crates:BUILD.wasm-bindgen-macro-0.2.83.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasm-bindgen-macro-support-0.2.83",
        sha256 = "07bc0c051dc5f23e307b13285f9d75df86bfdf816c5721e573dec1f9b8aa193c",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-macro-support/0.2.83/download"],
        strip_prefix = "wasm-bindgen-macro-support-0.2.83",
        build_file = Label("@patch-labs//third-party/crates:BUILD.wasm-bindgen-macro-support-0.2.83.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__wasm-bindgen-shared-0.2.83",
        sha256 = "1c38c045535d93ec4f0b4defec448e4291638ee608530863b1e2ba115d4fff7f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/wasm-bindgen-shared/0.2.83/download"],
        strip_prefix = "wasm-bindgen-shared-0.2.83",
        build_file = Label("@patch-labs//third-party/crates:BUILD.wasm-bindgen-shared-0.2.83.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__web-sys-0.3.60",
        sha256 = "bcda906d8be16e728fd5adc5b729afad4e444e106ab28cd1c7256e54fa61510f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/web-sys/0.3.60/download"],
        strip_prefix = "web-sys-0.3.60",
        build_file = Label("@patch-labs//third-party/crates:BUILD.web-sys-0.3.60.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__webpki-0.22.0",
        sha256 = "f095d78192e208183081cc07bc5515ef55216397af48b873e5edcd72637fa1bd",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/webpki/0.22.0/download"],
        strip_prefix = "webpki-0.22.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.webpki-0.22.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__webpki-roots-0.22.5",
        sha256 = "368bfe657969fb01238bb756d351dcade285e0f6fcbd36dcb23359a5169975be",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/webpki-roots/0.22.5/download"],
        strip_prefix = "webpki-roots-0.22.5",
        build_file = Label("@patch-labs//third-party/crates:BUILD.webpki-roots-0.22.5.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__which-4.3.0",
        sha256 = "1c831fbbee9e129a8cf93e7747a82da9d95ba8e16621cae60ec2cdc849bacb7b",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/which/4.3.0/download"],
        strip_prefix = "which-4.3.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.which-4.3.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__winapi-0.3.9",
        sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi/0.3.9/download"],
        strip_prefix = "winapi-0.3.9",
        build_file = Label("@patch-labs//third-party/crates:BUILD.winapi-0.3.9.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__winapi-i686-pc-windows-gnu-0.4.0",
        sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi-i686-pc-windows-gnu/0.4.0/download"],
        strip_prefix = "winapi-i686-pc-windows-gnu-0.4.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.winapi-i686-pc-windows-gnu-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__winapi-x86_64-pc-windows-gnu-0.4.0",
        sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/winapi-x86_64-pc-windows-gnu/0.4.0/download"],
        strip_prefix = "winapi-x86_64-pc-windows-gnu-0.4.0",
        build_file = Label("@patch-labs//third-party/crates:BUILD.winapi-x86_64-pc-windows-gnu-0.4.0.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows-sys-0.36.1",
        sha256 = "ea04155a16a59f9eab786fe12a4a450e75cdb175f9e0d80da1e17db09f55b8d2",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows-sys/0.36.1/download"],
        strip_prefix = "windows-sys-0.36.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.windows-sys-0.36.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_aarch64_msvc-0.36.1",
        sha256 = "9bb8c3fd39ade2d67e9874ac4f3db21f0d710bee00fe7cab16949ec184eeaa47",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_aarch64_msvc/0.36.1/download"],
        strip_prefix = "windows_aarch64_msvc-0.36.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.windows_aarch64_msvc-0.36.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_i686_gnu-0.36.1",
        sha256 = "180e6ccf01daf4c426b846dfc66db1fc518f074baa793aa7d9b9aaeffad6a3b6",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_i686_gnu/0.36.1/download"],
        strip_prefix = "windows_i686_gnu-0.36.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.windows_i686_gnu-0.36.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_i686_msvc-0.36.1",
        sha256 = "e2e7917148b2812d1eeafaeb22a97e4813dfa60a3f8f78ebe204bcc88f12f024",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_i686_msvc/0.36.1/download"],
        strip_prefix = "windows_i686_msvc-0.36.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.windows_i686_msvc-0.36.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_x86_64_gnu-0.36.1",
        sha256 = "4dcd171b8776c41b97521e5da127a2d86ad280114807d0b2ab1e462bc764d9e1",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_x86_64_gnu/0.36.1/download"],
        strip_prefix = "windows_x86_64_gnu-0.36.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.windows_x86_64_gnu-0.36.1.bazel"),
    )

    maybe(
        http_archive,
        name = "crates_vendor__windows_x86_64_msvc-0.36.1",
        sha256 = "c811ca4a8c853ef420abd8592ba53ddbbac90410fab6903b3e79972a631f7680",
        type = "tar.gz",
        urls = ["https://crates.io/api/v1/crates/windows_x86_64_msvc/0.36.1/download"],
        strip_prefix = "windows_x86_64_msvc-0.36.1",
        build_file = Label("@patch-labs//third-party/crates:BUILD.windows_x86_64_msvc-0.36.1.bazel"),
    )
